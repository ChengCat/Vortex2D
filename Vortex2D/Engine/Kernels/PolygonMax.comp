#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
  int n;
}consts;

layout(binding = 0, r32f) uniform image2D LevelSet;

layout(std430, binding = 1) buffer Polygon
{
  vec2 points[];
}polygon;

float dist_to_line(vec2 a, vec2 b, vec2 p)
{
    vec2 dir = b - a;
    vec2 norm = vec2(-dir.y, dir.x);
    return dot(normalize(norm), a - p);
}

void main(void)
{
    ivec2 pos = ivec2(gl_GlobalInvocationID);
    if (pos.x >= 0 && pos.y >= 0 && pos.x < consts.width && pos.y < consts.height)
    {
        float value = imageLoad(LevelSet, pos).x;
        for (int i = consts.n - 1, j = 0; j < consts.n; i = j++)
        {
            float lineDist = dist_to_line(polygon.points[i], polygon.points[j], pos);
            value = max(lineDist, value);
        }
        imageStore(LevelSet, pos, vec4(value, 0.0, 0.0, 0.0));
    }
}
