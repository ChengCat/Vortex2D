#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
}consts;

layout(std430, binding = 0) buffer Input
{
  float value[];
}coarse;

layout(std430, binding = 1) buffer Output
{
  float value[];
}fine;

void main()
{
  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x > 0 && pos.y > 0 && pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    ivec2 t = ivec2(pos.x % 2 == 0.0 ? 1.0 : -1.0,
                    pos.y % 2 == 0.0 ? 1.0 : -1.0);

    ivec2 coarsePos = ivec2(1) + pos / ivec2(2);
    int coarseWidth = 2 + (consts.width - 2) / 2;
    int coarseIndex = coarsePos.x + coarsePos.y * coarseWidth;

    float p = 0.0;
    p += 9.0 * coarse.value[coarseIndex];
    p += 3.0 * coarse.value[coarseIndex + t.x];
    p += 3.0 * coarse.value[coarseIndex + t.y * coarseWidth];
    p += 1.0 * coarse.value[coarseIndex + t.x + t.y * coarseWidth];

    int index = pos.x + pos.y * consts.width;
    fine.value[index] += p * 0.0625;
  }
}
