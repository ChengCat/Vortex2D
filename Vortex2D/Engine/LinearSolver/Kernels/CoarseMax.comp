#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
}consts;

layout(std430, binding = 0) buffer Input
{
  float value[];
}fine;

layout(std430, binding = 1) buffer Output
{
  float value[];
}coarse;

void main()
{
  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x > 0 && pos.y > 0 && pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    ivec2 finePos = pos * ivec2(2) - ivec2(1);
    int fineWidth = 2 + (consts.width - 2) * 2;
    int fineIndex = finePos.x + finePos.y * fineWidth;

    float value = max(max(fine.value[fineIndex], fine.value[fineIndex + 1]),
                      max(fine.value[fineIndex + fineWidth], fine.value[fineIndex + 1 + fineWidth]));

    int index = pos.x + pos.y * consts.width;
    coarse.value[index] = value * 0.5;
  }
}

