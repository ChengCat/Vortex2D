#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
}consts;

layout(std430, binding = 0) buffer Pressure
{
  float value[];
}pressure;

struct A
{
  vec4 weights;
  float diagonal;
};

layout(std430, binding = 1) buffer Matrix
{
  A data[];
}matrix;

layout(std430, binding = 2) buffer B
{
  float value[];
}b;

layout(std430, binding = 0) buffer OutputPressure
{
  float value[];
}outputPressure;

const float w = 2.0/3.0;

void main()
{
  ivec2 pos = ivec2(gl_GlobalInvocationID);

  if (pos.x > 0 && pos.y > 0 && pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    int index = pos.x + pos.y * consts.width;

    A data = matrix.data[index];
    if (data.diagonal != 0.0)
    {
      float oldPressure = pressure.value[index];
      vec4 p;
      p.x = pressure.value[index + 1];
      p.y = pressure.value[index - 1];
      p.z = pressure.value[index + consts.width];
      p.w = pressure.value[index - consts.width];

      outputPressure.value[index] = mix(oldPressure, (b.value[index] - dot(p, data.weights)) / data.diagonal, w);
    }
  }
}
