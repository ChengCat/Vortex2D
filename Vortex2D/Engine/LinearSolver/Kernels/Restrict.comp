#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
}consts;

layout(std430, binding = 0) buffer Input
{
  float value[];
}fine;

layout(std430, binding = 1) buffer Output
{
  float value[];
}coarse;

const float coefficients[16] = float[](1.0, 3.0, 3.0, 1.0,
                                       3.0, 9.0, 9.0, 3.0,
                                       3.0, 9.0, 9.0, 3.0,
                                       1.0, 3.0, 3.0, 1.0);

void main()
{
  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x > 0 && pos.y > 0 && pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    ivec2 finePos = pos * ivec2(2) - ivec2(1);
    int fineWidth = consts.width * 2 - 2;
    int fineIndex = finePos.x + finePos.y * fineWidth;

    float p = 0.0;
    for (int i = -1; i <= 2; i++)
    {
        for (int j = -1; j <= 2; j++)
        {
            int index = (i + 1) + 4 * (j + 1);
            p += coefficients[index] * fine.value[fineIndex + i + j * fineWidth];
        }
    }

    int index = pos.x + pos.y * consts.width;
    coarse.value[index] = p * 0.015625;
  }
}
