sudo: required
dist: trusty
language: cpp

compiler:
  - gcc

os:
  - linux
  - osx

matrix:
  allow_failures:
    - os: osx

branches:
  only:
    - master

# Environment variables
env:
  global:
    - GH_REPO_NAME: Vortex2D
    - DOXYFILE: Doxyfile
    - GH_REPO_REF: github.com/mmaldacker/Vortex2D.git
    - secure: "XdKG1w18LP9346CJclS4FbRTYFZImPexTHQgzQcFGimBY0teubeMUKDs2Ah+f962ndxUFOZapXgAwPW0eVV8Zq8VIS80mthjuFqOREp5AuDGHoPjz/tSNBHkcQFddSa1T7Wt4r2WvKooriuM6sj3mIm1kMHxifrGUJI4z9xLd11BESo9i3BnENqv31T9Q2sdKQJRz2pLzVgoTHOq65G4DFQZ7MYKZncaepWacJSLlKQrYIKHqsJSLL3FVQ1SBvcc93nlDwIxfrv+U7tSfRXtHD5OqVLGWMASUSr7IE//wvd+w5WCedraFoc5N7qDbgH9glGzVxl7b5UxmP74A+lfacz+ENnItdUqm7YUEhzgNbp2/th3BbcVoBk1oSaatqXR02r500kkaLFget7oU0WYt36wNX3/RyXYAUnivWNbRA4Ch9N50stkkU1q0QbshAcfCZgPPVhTZ3DVsdihxRf+wYpQCe6EOAzsF0La8XJ6hsj1BpbPUguZCeTOM/cHI9gc36wSzPhkT4QuPr0/yI2F58vtVvBOBowwm38gC9BPe/e7wALQXWj4XWFVt7uUbiuuO8mpKgTlOZNf1vLmKw9jxq84G7X4GuxgrgVavZ5UGR9IZU8H3BN+6IOEpRfan7s/JpHyeKADXUonnUobkll16JUpde6g6VJAnD2EGyqKgh0="

addons:
  apt:
    packages:
      # Vortex2D dependencies
      - doxygen
      - gdb
      - lcov
      # GLFW3 dependencies
      - libxrandr-dev
      - libxinerama-dev
      - libxcursor-dev

install:
# Mesa 13.0.4 install
 - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cd Dependencies; chmod +x buildMesa.sh; ./buildMesa.sh; cd ..; fi

before_script:
  - ulimit -c unlimited -S       # enable core dumps

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build
  - cd build
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cmake .. -DVORTEX2D_ENABLE_TESTS=ON -DVORTEX2D_ENABLE_EXAMPLES=ON -DVORTEX2D_USE_OSMESA=ON -DCMAKE_BUILD_TYPE=Coverage; else cmake .. -DVORTEX2D_ENABLE_TESTS=ON -DVORTEX2D_ENABLE_EXAMPLES=ON; fi
  - make -j 4
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then make vortex2d_tests_coverage; fi

# Generate and deploy documentation
after_success:
  # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' '*/Vortex2D/Dependencies/*' '*/Vortex2D/Tests/*' '*/Vortex2D/RenderWindow/*' '*/Vortex2D/build/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"; fi
  # Compile & Upload docs
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cd $TRAVIS_BUILD_DIR/Docs; chmod +x generatePublishDocs.sh; ./generatePublishDocs.sh; fi

# Check if there is a coredump and print backtrace if there is
after_failure:
  - COREFILE=$(find . -maxdepth 1 -name "core*" | head -n 1) # find core file
  - if [[ -f "$COREFILE" ]]; then gdb -c "$COREFILE" Tests/vortex2d_tests -ex "thread apply all bt" -ex "set pagination 0" -batch; fi
