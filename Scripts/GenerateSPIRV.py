import argparse
import subprocess
import ntpath

parser = argparse.ArgumentParser(description='Compile to SPIRV and generate header')
parser.add_argument('files', metavar='files', nargs='+', help='list of glsl files')
parser.add_argument('--output', action='store', dest='output', help='output header file')
parser.add_argument('--compiler', action='store', dest='compiler', help='location of spirv compiler')

args = parser.parse_args()

def genCArray(file):
  basename = ntpath.basename(file).replace('.', '_')
  return 'static uint32_t ' + basename + '[] = {\n' + subprocess.check_output([args.compiler,'-c',file,'-mfmt=num','-o','-']) + '};\n\n'

with open(args.output, 'w') as f:
  f.write('''/* This header is autogenerated */
#ifndef GENERATED_SPIRV_H
#define GENERATED_SPIRV_H

#include <cstdint>

''')

  for file in args.files:
    f.write(genCArray(file))
    
  f.write('''#endif

''')
